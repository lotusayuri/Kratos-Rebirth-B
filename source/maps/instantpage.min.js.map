{"version":3,"sources":["instantpage.js"],"names":["mouseoverTimer","lastTouchTimestamp","prefetches","Set","prefetchElement","document","createElement","isSupported","relList","supports","window","IntersectionObserver","IntersectionObserverEntry","prototype","allowQueryString","body","dataset","allowExternalLinks","useWhitelist","mousedownShortcut","DELAY_TO_NOT_BE_CONSIDERED_A_TOUCH_INITIATED_ACTION","delayOnHover","useMousedown","useMousedownOnly","useViewport","intensity","instantIntensity","substr","length","navigator","connection","saveData","effectiveType","includes","documentElement","clientWidth","clientHeight","milliseconds","parseInt","isNaN","triggeringFunction","eventListenersOptions","capture","passive","addEventListener","touchstartListener","mousedownListener","mouseoverListener","mousedownShortcutListener","requestIdleCallback","callback","timeout","intersectionObserver","entries","forEach","entry","isIntersecting","linkElement","target","unobserve","preload","href","querySelectorAll","isPreloadable","observe","event","performance","now","closest","mouseoutListener","setTimeout","undefined","relatedTarget","clearTimeout","which","metaKey","ctrlKey","detail","preventDefault","once","customEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","origin","location","protocol","search","hash","pathname","url","has","prefetcher","rel","head","appendChild","add"],"mappings":"AAAA;2FAEA,IAAIA,eACAC,mBACEC,WAAa,IAAIC,IACjBC,gBAAkBC,SAASC,cAAc,QACzCC,YAAcH,gBAAgBI,SAAWJ,gBAAgBI,QAAQC,UAAYL,gBAAgBI,QAAQC,SAAS,aAC7FC,OAAOC,sBAAwB,mBAAoBC,0BAA0BC,UAC9FC,iBAAmB,4BAA6BT,SAASU,KAAKC,QAC9DC,mBAAqB,8BAA+BZ,SAASU,KAAKC,QAClEE,aAAe,qBAAsBb,SAASU,KAAKC,QACnDG,kBAAoB,6BAA8Bd,SAASU,KAAKC,QAChEI,oDAAsD,KAExDC,aAAe,GACfC,cAAe,EACfC,kBAAmB,EACnBC,aAAc,EAElB,GAAI,qBAAsBnB,SAASU,KAAKC,QAAS,CAC/C,IAAMS,UAAYpB,SAASU,KAAKC,QAAQU,iBAExC,GAA+C,aAA3CD,UAAUE,OAAO,EAAG,YAAYC,QAClCN,cAAe,EACE,kBAAbG,YACFF,kBAAmB,QAGlB,GAA8C,YAA1CE,UAAUE,OAAO,EAAG,WAAWC,QAChCC,UAAUC,aAAeD,UAAUC,WAAWC,UAAaF,UAAUC,WAAWE,eAAiBH,UAAUC,WAAWE,cAAcC,SAAS,SAChI,YAAbR,UAIEpB,SAAS6B,gBAAgBC,YAAc9B,SAAS6B,gBAAgBE,aAAe,OACjFZ,aAAc,GAGI,gBAAbC,YACPD,aAAc,QAIf,CACH,IAAMa,aAAeC,SAASb,WACzBc,MAAMF,gBACThB,aAAegB,eAKrB,GAAI9B,YAAa,CACf,IAqBMiC,mBArBAC,sBAAwB,CAC5BC,SAAS,EACTC,SAAS,GAkBX,GAfKpB,kBACHlB,SAASuC,iBAAiB,aAAcC,mBAAoBJ,uBAGzDnB,aAGKH,mBACNd,SAASuC,iBAAiB,YAAaE,kBAAmBL,uBAH5DpC,SAASuC,iBAAiB,YAAaG,kBAAmBN,uBAMxDtB,mBACFd,SAASuC,iBAAiB,YAAaI,0BAA2BP,uBAGhEjB,aAGAgB,mBADE9B,OAAOuC,oBACY,SAACC,GACpBD,oBAAoBC,EAAU,CAC5BC,QAAS,QAKQ,SAACD,GACpBA,OAIe,WACjB,IAAME,EAAuB,IAAIzC,sBAAqB,SAAC0C,GACrDA,EAAQC,SAAQ,SAACC,GACf,GAAIA,EAAMC,eAAgB,CACxB,IAAMC,EAAcF,EAAMG,OAC1BN,EAAqBO,UAAUF,GAC/BG,QAAQH,EAAYI,aAK1BxD,SAASyD,iBAAiB,KAAKR,SAAQ,SAACG,GAClCM,cAAcN,IAChBL,EAAqBY,QAAQP,SAOvC,SAASZ,mBAAmBoB,GAG1BhE,mBAAqBiE,YAAYC,MAEjC,IAAMV,EAAcQ,EAAMP,OAAOU,QAAQ,KAEpCL,cAAcN,IAInBG,QAAQH,EAAYI,MAGtB,SAASd,kBAAkBkB,GACzB,KAAIC,YAAYC,MAAQlE,mBAAqBmB,qDAA7C,CAIA,IAAMqC,EAAcQ,EAAMP,OAAOU,QAAQ,KAEpCL,cAAcN,KAInBA,EAAYb,iBAAiB,WAAYyB,iBAAkB,CAAC1B,SAAS,IAErE3C,eAAiBsE,YAAW,WAC1BV,QAAQH,EAAYI,MACpB7D,eAAiBuE,YAChBlD,gBAGL,SAASyB,kBAAkBmB,GACzB,IAAMR,EAAcQ,EAAMP,OAAOU,QAAQ,KAEpCL,cAAcN,IAInBG,QAAQH,EAAYI,MAGtB,SAASQ,iBAAiBJ,GACpBA,EAAMO,eAAiBP,EAAMP,OAAOU,QAAQ,MAAQH,EAAMO,cAAcJ,QAAQ,MAIhFpE,iBACFyE,aAAazE,gBACbA,eAAiBuE,WAIrB,SAASvB,0BAA0BiB,GACjC,KAAIC,YAAYC,MAAQlE,mBAAqBmB,qDAA7C,CAIA,IAAMqC,EAAcQ,EAAMP,OAAOU,QAAQ,KAEzC,KAAIH,EAAMS,MAAQ,GAAKT,EAAMU,SAAWV,EAAMW,UAIzCnB,EAAL,CAIAA,EAAYb,iBAAiB,SAAS,SAAUqB,GAC1B,MAAhBA,EAAMY,QAIVZ,EAAMa,mBACL,CAACpC,SAAS,EAAMC,SAAS,EAAOoC,MAAM,IAEzC,IAAMC,EAAc,IAAIC,WAAW,QAAS,CAACC,KAAMxE,OAAQyE,SAAS,EAAMC,YAAY,EAAOP,OAAQ,OACrGpB,EAAY4B,cAAcL,KAG5B,SAASjB,cAAcN,GACrB,GAAKA,GAAgBA,EAAYI,QAI7B3C,cAAkB,YAAauC,EAAYzC,WAI1CC,oBAAsBwC,EAAY6B,QAAUC,SAASD,QAAY,YAAa7B,EAAYzC,UAI1F,CAAC,QAAS,UAAUiB,SAASwB,EAAY+B,YAIlB,SAAxB/B,EAAY+B,UAA4C,UAArBD,SAASC,YAI3C1E,mBAAoB2C,EAAYgC,QAAY,YAAahC,EAAYzC,YAItEyC,EAAYiC,MAAQjC,EAAYkC,SAAWlC,EAAYgC,QAAUF,SAASI,SAAWJ,SAASE,QAI9F,cAAehC,EAAYzC,SAI/B,OAAO,EAGT,SAAS4C,QAAQgC,GACf,IAAI1F,WAAW2F,IAAID,GAAnB,CAIA,IAAME,EAAazF,SAASC,cAAc,QAC1CwF,EAAWC,IAAM,WACjBD,EAAWjC,KAAO+B,EAClBvF,SAAS2F,KAAKC,YAAYH,GAE1B5F,WAAWgG,IAAIN","file":"../js/instantpage.min.js","sourcesContent":["/*! instant.page v5.1.0 - (C) 2019-2020 Alexandre Dieulot - https://instant.page/license */\r\n\r\nlet mouseoverTimer\r\nlet lastTouchTimestamp\r\nconst prefetches = new Set()\r\nconst prefetchElement = document.createElement('link')\r\nconst isSupported = prefetchElement.relList && prefetchElement.relList.supports && prefetchElement.relList.supports('prefetch')\r\n                    && window.IntersectionObserver && 'isIntersecting' in IntersectionObserverEntry.prototype\r\nconst allowQueryString = 'instantAllowQueryString' in document.body.dataset\r\nconst allowExternalLinks = 'instantAllowExternalLinks' in document.body.dataset\r\nconst useWhitelist = 'instantWhitelist' in document.body.dataset\r\nconst mousedownShortcut = 'instantMousedownShortcut' in document.body.dataset\r\nconst DELAY_TO_NOT_BE_CONSIDERED_A_TOUCH_INITIATED_ACTION = 1111\r\n\r\nlet delayOnHover = 65\r\nlet useMousedown = false\r\nlet useMousedownOnly = false\r\nlet useViewport = false\r\n\r\nif ('instantIntensity' in document.body.dataset) {\r\n  const intensity = document.body.dataset.instantIntensity\r\n\r\n  if (intensity.substr(0, 'mousedown'.length) == 'mousedown') {\r\n    useMousedown = true\r\n    if (intensity == 'mousedown-only') {\r\n      useMousedownOnly = true\r\n    }\r\n  }\r\n  else if (intensity.substr(0, 'viewport'.length) == 'viewport') {\r\n    if (!(navigator.connection && (navigator.connection.saveData || (navigator.connection.effectiveType && navigator.connection.effectiveType.includes('2g'))))) {\r\n      if (intensity == \"viewport\") {\r\n        /* Biggest iPhone resolution (which we want): 414 × 896 = 370944\r\n         * Small 7\" tablet resolution (which we don’t want): 600 × 1024 = 614400\r\n         * Note that the viewport (which we check here) is smaller than the resolution due to the UI’s chrome */\r\n        if (document.documentElement.clientWidth * document.documentElement.clientHeight < 450000) {\r\n          useViewport = true\r\n        }\r\n      }\r\n      else if (intensity == \"viewport-all\") {\r\n        useViewport = true\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    const milliseconds = parseInt(intensity)\r\n    if (!isNaN(milliseconds)) {\r\n      delayOnHover = milliseconds\r\n    }\r\n  }\r\n}\r\n\r\nif (isSupported) {\r\n  const eventListenersOptions = {\r\n    capture: true,\r\n    passive: true,\r\n  }\r\n\r\n  if (!useMousedownOnly) {\r\n    document.addEventListener('touchstart', touchstartListener, eventListenersOptions)\r\n  }\r\n\r\n  if (!useMousedown) {\r\n    document.addEventListener('mouseover', mouseoverListener, eventListenersOptions)\r\n  }\r\n  else if (!mousedownShortcut) {\r\n      document.addEventListener('mousedown', mousedownListener, eventListenersOptions)\r\n  }\r\n\r\n  if (mousedownShortcut) {\r\n    document.addEventListener('mousedown', mousedownShortcutListener, eventListenersOptions)\r\n  }\r\n\r\n  if (useViewport) {\r\n    let triggeringFunction\r\n    if (window.requestIdleCallback) {\r\n      triggeringFunction = (callback) => {\r\n        requestIdleCallback(callback, {\r\n          timeout: 1500,\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      triggeringFunction = (callback) => {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    triggeringFunction(() => {\r\n      const intersectionObserver = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            const linkElement = entry.target\r\n            intersectionObserver.unobserve(linkElement)\r\n            preload(linkElement.href)\r\n          }\r\n        })\r\n      })\r\n\r\n      document.querySelectorAll('a').forEach((linkElement) => {\r\n        if (isPreloadable(linkElement)) {\r\n          intersectionObserver.observe(linkElement)\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nfunction touchstartListener(event) {\r\n  /* Chrome on Android calls mouseover before touchcancel so `lastTouchTimestamp`\r\n   * must be assigned on touchstart to be measured on mouseover. */\r\n  lastTouchTimestamp = performance.now()\r\n\r\n  const linkElement = event.target.closest('a')\r\n\r\n  if (!isPreloadable(linkElement)) {\r\n    return\r\n  }\r\n\r\n  preload(linkElement.href)\r\n}\r\n\r\nfunction mouseoverListener(event) {\r\n  if (performance.now() - lastTouchTimestamp < DELAY_TO_NOT_BE_CONSIDERED_A_TOUCH_INITIATED_ACTION) {\r\n    return\r\n  }\r\n\r\n  const linkElement = event.target.closest('a')\r\n\r\n  if (!isPreloadable(linkElement)) {\r\n    return\r\n  }\r\n\r\n  linkElement.addEventListener('mouseout', mouseoutListener, {passive: true})\r\n\r\n  mouseoverTimer = setTimeout(() => {\r\n    preload(linkElement.href)\r\n    mouseoverTimer = undefined\r\n  }, delayOnHover)\r\n}\r\n\r\nfunction mousedownListener(event) {\r\n  const linkElement = event.target.closest('a')\r\n\r\n  if (!isPreloadable(linkElement)) {\r\n    return\r\n  }\r\n\r\n  preload(linkElement.href)\r\n}\r\n\r\nfunction mouseoutListener(event) {\r\n  if (event.relatedTarget && event.target.closest('a') == event.relatedTarget.closest('a')) {\r\n    return\r\n  }\r\n\r\n  if (mouseoverTimer) {\r\n    clearTimeout(mouseoverTimer)\r\n    mouseoverTimer = undefined\r\n  }\r\n}\r\n\r\nfunction mousedownShortcutListener(event) {\r\n  if (performance.now() - lastTouchTimestamp < DELAY_TO_NOT_BE_CONSIDERED_A_TOUCH_INITIATED_ACTION) {\r\n    return\r\n  }\r\n\r\n  const linkElement = event.target.closest('a')\r\n\r\n  if (event.which > 1 || event.metaKey || event.ctrlKey) {\r\n    return\r\n  }\r\n\r\n  if (!linkElement) {\r\n    return\r\n  }\r\n\r\n  linkElement.addEventListener('click', function (event) {\r\n    if (event.detail == 1337) {\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n  }, {capture: true, passive: false, once: true})\r\n\r\n  const customEvent = new MouseEvent('click', {view: window, bubbles: true, cancelable: false, detail: 1337})\r\n  linkElement.dispatchEvent(customEvent)\r\n}\r\n\r\nfunction isPreloadable(linkElement) {\r\n  if (!linkElement || !linkElement.href) {\r\n    return\r\n  }\r\n\r\n  if (useWhitelist && !('instant' in linkElement.dataset)) {\r\n    return\r\n  }\r\n\r\n  if (!allowExternalLinks && linkElement.origin != location.origin && !('instant' in linkElement.dataset)) {\r\n    return\r\n  }\r\n\r\n  if (!['http:', 'https:'].includes(linkElement.protocol)) {\r\n    return\r\n  }\r\n\r\n  if (linkElement.protocol == 'http:' && location.protocol == 'https:') {\r\n    return\r\n  }\r\n\r\n  if (!allowQueryString && linkElement.search && !('instant' in linkElement.dataset)) {\r\n    return\r\n  }\r\n\r\n  if (linkElement.hash && linkElement.pathname + linkElement.search == location.pathname + location.search) {\r\n    return\r\n  }\r\n\r\n  if ('noInstant' in linkElement.dataset) {\r\n    return\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction preload(url) {\r\n  if (prefetches.has(url)) {\r\n    return\r\n  }\r\n\r\n  const prefetcher = document.createElement('link')\r\n  prefetcher.rel = 'prefetch'\r\n  prefetcher.href = url\r\n  document.head.appendChild(prefetcher)\r\n\r\n  prefetches.add(url)\r\n}\r\n"]}